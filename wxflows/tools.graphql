# [[ tool definition example ]]
# .
# Flows Engine allows creating LLM "tools" from parts of your GraphQL schema. To
# do that, add a field to the Query type, using the example below and replacing
# placeholders with something relevant for your tool.
# .
# extend type Query {
#   tool_name_definition: TC_GraphQL # <-- replace tool_name with something
#     @supplies(query: "tc_tools")
#     @materializer(
#       query: "tc_graphql_tool"
#       arguments: [
#         { name: "name", const: "[an internal tool name, e.g. 'wikipedia']" }
#         { name: "description", const: "[a description that helps LLMs to use this tool, e.g. 'Retrieve information from Wikipedia']" }
#         { name: "fields", const: "[a regex defining a subset of fields in this GraphQL schema, e.g. 'search|page' or 'mytool_.*']" }
#       ]
#     )
# }
# [[ end of tool definition example ]]

extend type Query {
  wikipediaTool: TC_GraphQL
    @supplies(query: "tc_tools")
    @materializer(
      query: "tc_graphql_tool"
      arguments: [
        { name: "name", const: "wikipedia" }
        { name: "description", const: "Retrieve information from Wikipedia." }
        { name: "fields", const: "search|page" }
      ]
    )
  google_books: TC_GraphQL
    @supplies(query: "tc_tools")
    @materializer(
      query: "tc_graphql_tool"
      arguments: [
        { name: "name", const: "google_books" }
        {
          name: "description"
          const: "Retrieve information from Google Books. Find books by search string, for example to search for Daniel Keyes 'Flowers for Algernon' use q: 'intitle:flowers+inauthor:keyes'"
        }
        { name: "fields", const: "books|book" }
      ]
    )
}
